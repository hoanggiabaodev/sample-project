@{
    ViewData["Title"] = "Gi·ªõi Thi·ªáu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .intro-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
        color: #333;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        margin: 0;
        padding: 0;
    }

    .intro-wrapper {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .intro-header {
        text-align: center;
        padding: 60px 0;
        color: white;
    }

    .intro-title {
        font-size: 3.5rem;
        margin-bottom: 20px;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        animation: fadeInUp 1s ease-out;
    }

    .intro-subtitle {
        font-size: 1.3rem;
        opacity: 0.9;
        animation: fadeInUp 1s ease-out 0.3s both;
    }

    .intro-content {
        background: white;
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        overflow: hidden;
        margin-top: -40px;
        position: relative;
        z-index: 1;
    }

    .intro-main-section {
        padding: 60px 40px;
        text-align: center;
    }

    .intro-section-title {
        font-size: 2.5rem;
        color: #2c3e50;
        margin-bottom: 30px;
        position: relative;
    }

    .intro-section-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 4px;
        background: linear-gradient(90deg, #667eea, #764ba2);
        border-radius: 2px;
    }

    .intro-description {
        font-size: 1.2rem;
        color: #555;
        max-width: 800px;
        margin: 0 auto 40px;
        line-height: 1.8;
    }

    .intro-features {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 30px;
        padding: 40px;
        background: #f8f9fa;
    }

    .intro-feature-card {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .intro-feature-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    }

    .intro-feature-icon {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 20px;
        font-size: 2rem;
        color: white;
    }

    .intro-feature-title {
        font-size: 1.5rem;
        color: #2c3e50;
        margin-bottom: 15px;
    }

    .intro-feature-text {
        color: #666;
        line-height: 1.6;
    }

    .intro-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        padding: 40px;
        background: #2c3e50;
        color: white;
    }

    .intro-stat-item {
        text-align: center;
        padding: 20px;
    }

    .intro-stat-number {
        font-size: 3rem;
        font-weight: bold;
        color: #3498db;
        display: block;
    }

    .intro-stat-label {
        font-size: 1.1rem;
        opacity: 0.9;
        margin-top: 10px;
    }

    .intro-cta-section {
        padding: 60px 40px;
        text-align: center;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
    }

    .intro-cta-title {
        font-size: 2.5rem;
        margin-bottom: 20px;
    }

    .intro-cta-text {
        font-size: 1.2rem;
        margin-bottom: 30px;
        opacity: 0.9;
    }

    .intro-btn {
        display: inline-block;
        padding: 15px 40px;
        background: white;
        color: #667eea;
        text-decoration: none;
        border-radius: 50px;
        font-weight: bold;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }

    .intro-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.3);
        color: #667eea;
        text-decoration: none;
    }

    .intro-team-section {
        padding: 60px 40px;
        background: #f8f9fa;
    }

    .intro-team-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 30px;
        margin-top: 40px;
    }

    .intro-team-card {
        background: white;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        text-align: center;
        transition: transform 0.3s ease;
    }

    .intro-team-card:hover {
        transform: translateY(-5px);
    }

    .intro-team-avatar {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        margin: 0 auto 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        color: white;
        font-weight: bold;
    }

    .intro-team-name {
        font-size: 1.3rem;
        color: #2c3e50;
        margin-bottom: 10px;
    }

    .intro-team-role {
        color: #667eea;
        font-weight: 600;
        margin-bottom: 15px;
    }

    .intro-team-bio {
        color: #666;
        font-size: 0.95rem;
        line-height: 1.5;
    }

    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@media (max-width: 768px) {
        .intro-title {
            font-size: 2.5rem;
        }
        
        .intro-main-section, .intro-cta-section, .intro-team-section {
            padding: 40px 20px;
        }
        
        .intro-features {
            padding: 20px;
            grid-template-columns: 1fr;
        }
        
        .intro-stats {
            padding: 20px;
            grid-template-columns: repeat(2, 1fr);
        }

        .intro-team-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="intro-container">
    <div class="intro-wrapper">
        <header class="intro-header">
            <h1 class="intro-title">@ViewData["CompanyName"] ?? "Ch√†o M·ª´ng ƒê·∫øn V·ªõi Ch√∫ng T√¥i"</h1>
            <p class="intro-subtitle">Kh√°m ph√° nh·ªØng ƒëi·ªÅu tuy·ªát v·ªùi m√† ch√∫ng t√¥i mang l·∫°i</p>
        </header>

        <main class="intro-content">
            <section class="intro-main-section">
                <h2 class="intro-section-title">Gi·ªõi Thi·ªáu</h2>
                <p class="intro-description">
                    @{
                        string companyDescription = ViewData["CompanyDescription"]?.ToString() ?? 
                        "Ch√∫ng t√¥i l√† m·ªôt ƒë·ªôi ng≈© ƒëam m√™ c√¥ng ngh·ªá, lu√¥n n·ªó l·ª±c ƒë·ªÉ mang ƒë·∫øn nh·ªØng gi·∫£i ph√°p s√°ng t·∫°o v√† hi·ªáu qu·∫£ nh·∫•t cho kh√°ch h√†ng. V·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c ph√°t tri·ªÉn web v√† ·ª©ng d·ª•ng, ch√∫ng t√¥i cam k·∫øt cung c·∫•p d·ªãch v·ª• ch·∫•t l∆∞·ª£ng cao v√† h·ªó tr·ª£ t·∫≠n t√¨nh cho m·ªçi d·ª± √°n.";
                    }
                    @Html.Raw(companyDescription)
                </p>
            </section>

            <section class="intro-features">
                <div class="intro-feature-card">
                    <div class="intro-feature-icon">üöÄ</div>
                    <h3 class="intro-feature-title">Hi·ªáu Su·∫•t Cao</h3>
                    <p class="intro-feature-text">Ch√∫ng t√¥i t·ªëi ∆∞u h√≥a m·ªçi s·∫£n ph·∫©m ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c hi·ªáu su·∫•t t·ªët nh·∫•t, ƒë·∫£m b·∫£o tr·∫£i nghi·ªám ng∆∞·ªùi d√πng m∆∞·ª£t m√† v√† nhanh ch√≥ng.</p>
                </div>
                <div class="intro-feature-card">
                    <div class="intro-feature-icon">üí°</div>
                    <h3 class="intro-feature-title">S√°ng T·∫°o</h3>
                    <p class="intro-feature-text">ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i lu√¥n t√¨m ki·∫øm nh·ªØng √Ω t∆∞·ªüng m·ªõi m·∫ª v√† gi·∫£i ph√°p s√°ng t·∫°o ƒë·ªÉ gi·∫£i quy·∫øt c√°c th√°ch th·ª©c ph·ª©c t·∫°p.</p>
                </div>
                <div class="intro-feature-card">
                    <div class="intro-feature-icon">ü§ù</div>
                    <h3 class="intro-feature-title">H·ªó Tr·ª£ 24/7</h3>
                    <p class="intro-feature-text">Ch√∫ng t√¥i cam k·∫øt h·ªó tr·ª£ kh√°ch h√†ng m·ªçi l√∫c, m·ªçi n∆°i v·ªõi ƒë·ªôi ng≈© chuy√™n gia gi√†u kinh nghi·ªám v√† nhi·ªát t√¨nh.</p>
                </div>
            </section>

            <section class="intro-stats">
                @{
                    var stats = new List<dynamic> {
                        new { Number = "500+", Label = "D·ª± √Ån Ho√†n Th√†nh" },
                        new { Number = "100+", Label = "Kh√°ch H√†ng H√†i L√≤ng" },
                        new { Number = "5+", Label = "NƒÉm Kinh Nghi·ªám" },
                        new { Number = "24/7", Label = "H·ªó Tr·ª£ Kh√°ch H√†ng" }
                    };
                }
                @foreach (var stat in stats)
                {
                    <div class="intro-stat-item">
                        <span class="intro-stat-number">@stat.Number</span>
                        <div class="intro-stat-label">@stat.Label</div>
                    </div>
                }
            </section>

            <section class="intro-team-section">
                <div class="intro-main-section">
                    <h2 class="intro-section-title">ƒê·ªôi Ng≈© C·ªßa Ch√∫ng T√¥i</h2>
                    <div class="intro-team-grid">
                        @{
                            var teamMembers = new List<dynamic> {
                                new { Name = "Nguy·ªÖn VƒÉn A", Role = "CEO & Founder", Bio = "V·ªõi h∆°n 10 nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c c√¥ng ngh·ªá, anh A ƒë√£ d·∫´n d·∫Øt c√¥ng ty ƒë·∫°t ƒë∆∞·ª£c nhi·ªÅu th√†nh t·ª±u ƒë√°ng k·ªÉ.", Avatar = "A" },
                                new { Name = "Tr·∫ßn Th·ªã B", Role = "CTO", Bio = "Chuy√™n gia c√¥ng ngh·ªá h√†ng ƒë·∫ßu v·ªõi kinh nghi·ªám s√¢u r·ªông trong ph√°t tri·ªÉn ph·∫ßn m·ªÅm v√† qu·∫£n l√Ω d·ª± √°n.", Avatar = "B" },
                                new { Name = "L√™ VƒÉn C", Role = "Lead Developer", Bio = "L·∫≠p tr√¨nh vi√™n t√†i nƒÉng v·ªõi ƒëam m√™ t·∫°o ra nh·ªØng s·∫£n ph·∫©m c√¥ng ngh·ªá ch·∫•t l∆∞·ª£ng cao.", Avatar = "C" }
                            };
                        }
                        @foreach (var member in teamMembers)
                        {
                            <div class="intro-team-card">
                                <div class="intro-team-avatar">@member.Avatar</div>
                                <h4 class="intro-team-name">@member.Name</h4>
                                <p class="intro-team-role">@member.Role</p>
                                <p class="intro-team-bio">@member.Bio</p>
                            </div>
                        }
                    </div>
                </div>
            </section>

            <section class="intro-cta-section">
                <h2 class="intro-cta-title">S·∫µn S√†ng B·∫Øt ƒê·∫ßu?</h2>
                <p class="intro-cta-text">H√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay h√¥m nay ƒë·ªÉ th·∫£o lu·∫≠n v·ªÅ d·ª± √°n c·ªßa b·∫°n</p>
                @Html.ActionLink("Li√™n H·ªá Ngay", "Contact", "Home", null, new { @class = "intro-btn" })
            </section>
        </main>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add scroll animation for feature cards
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.animation = 'fadeInUp 0.6s ease-out forwards';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.intro-feature-card, .intro-team-card').forEach(card => {
            observer.observe(card);
        });

        // Counter animation for stats
        function animateCounter(element, target) {
            let current = 0;
            const targetNum = parseInt(target.replace(/\D/g, '')) || 0;
            const increment = targetNum / 100;
            const timer = setInterval(() => {
                current += increment;
                if (current >= targetNum) {
                    current = targetNum;
                    clearInterval(timer);
                }
                element.textContent = Math.floor(current) + (target.includes('+') ? '+' : target.includes('/') ? '/7' : '');
            }, 20);
        }

        const statsObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const number = entry.target.querySelector('.intro-stat-number');
                    const text = number.textContent;
                    if (text !== '24/7') {
                        animateCounter(number, text);
                    }
                    statsObserver.unobserve(entry.target);
                }
            });
        }, { threshold: 0.5 });

        document.querySelectorAll('.intro-stat-item').forEach(item => {
            statsObserver.observe(item);
        });
    });
</script>