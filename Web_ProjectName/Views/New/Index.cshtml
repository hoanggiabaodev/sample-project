@{
    ViewData["Title"] = "Quản lý Tin tức";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-flex align-items-center justify-content-between">
                <h4 class="mb-0">Quản lý Tin tức</h4>
                <div class="page-title-right">
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addNewsModal">
                        <i class="fas fa-plus"></i> Thêm tin tức mới
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <label for="searchKeyword" class="form-label">Từ khóa tìm kiếm</label>
                            <input type="text" class="form-control" id="searchKeyword" placeholder="Nhập từ khóa...">
                        </div>
                        <div class="col-md-3">
                            <label for="categoryFilter" class="form-label">Danh mục</label>
                            <select class="form-control select2" id="categoryFilter">
                                <option value="">Tất cả danh mục</option>
                                <option value="1">Tin công nghệ</option>
                                <option value="2">Tin thể thao</option>
                                <option value="3">Tin giải trí</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="dateFrom" class="form-label">Từ ngày</label>
                            <input type="text" class="form-control datepicker" id="dateFrom" placeholder="dd/mm/yyyy">
                        </div>
                        <div class="col-md-3">
                            <label for="dateTo" class="form-label">Đến ngày</label>
                            <input type="text" class="form-control datepicker" id="dateTo" placeholder="dd/mm/yyyy">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-12">
                            <button type="button" class="btn btn-primary" id="btnSearch">
                                <i class="fas fa-search"></i> Tìm kiếm
                            </button>
                            <button type="button" class="btn btn-secondary" id="btnReset">
                                <i class="fas fa-undo"></i> Làm mới
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- News DataTable -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="newsDataTable" class="table table-striped table-bordered dt-responsive nowrap"
                            style="width:100%">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Hình ảnh</th>
                                    <th>Tiêu đề</th>
                                    <th>Danh mục</th>
                                    <th>Ngày đăng</th>
                                    <th>Lượt xem</th>
                                    <th>Trạng thái</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Data will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit News Modal -->
<div class="modal fade" id="addNewsModal" tabindex="-1" aria-labelledby="addNewsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addNewsModalLabel">Thêm tin tức mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newsForm">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <label for="newsTitle" class="form-label">Tiêu đề tin tức *</label>
                                <input type="text" class="form-control" id="newsTitle" required>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="newsCategory" class="form-label">Danh mục *</label>
                                <select class="form-control select2" id="newsCategory" required>
                                    <option value="">Chọn danh mục</option>
                                    <option value="1">Tin công nghệ</option>
                                    <option value="2">Tin thể thao</option>
                                    <option value="3">Tin giải trí</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="newsPublishedDate" class="form-label">Ngày đăng</label>
                                <input type="text" class="form-control datepicker" id="newsPublishedDate">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="newsIsHot">
                                    <label class="form-check-label" for="newsIsHot">
                                        Tin nổi bật
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="newsDescription" class="form-label">Mô tả ngắn</label>
                        <textarea class="form-control" id="newsDescription" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="newsContent" class="form-label">Nội dung chi tiết</label>
                        <textarea id="newsContent"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="newsImage" class="form-label">Hình ảnh</label>
                        <input type="file" class="form-control" id="newsImage" accept="image/*">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="btnSaveNews">
                    <i class="fas fa-save"></i> Lưu tin tức
                </button>
            </div>
        </div>
    </div>
</div>

<!-- View News Modal -->
<div class="modal fade" id="viewNewsModal" tabindex="-1" aria-labelledby="viewNewsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewNewsModalLabel">Chi tiết tin tức</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="viewNewsContent">
                <!-- Content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- DataTables CSS -->
    <link rel="stylesheet" type="text/css" href="~/lib/datatable/css/datatables.min.css">
    <link rel="stylesheet" type="text/css" href="~/lib/datatable/css/responsive.dataTables.min.css">

    <!-- Select2 CSS -->
    <link rel="stylesheet" type="text/css" href="~/lib/select2/css/select2.min.css">

    <!-- DatePicker CSS -->
    <link rel="stylesheet" type="text/css" href="~/lib/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">

    <!-- CKEditor -->
    <script src="~/lib/ckeditor/ckeditor.js"></script>

    <!-- DataTables JS -->
    <script type="text/javascript" src="~/lib/datatable/js/datatables.min.js"></script>
    <script type="text/javascript" src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
    <script type="text/javascript" src="~/lib/datatable/js/dataTables.responsive.min.js"></script>

    <!-- Select2 JS -->
    <script src="~/lib/select2/js/select2.min.js"></script>

    <!-- DatePicker JS -->
    <script src="~/lib/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <script src="~/lib/bootstrap-datepicker/dist/js/il8n/vi.js"></script>

    <!-- IziToast CSS & JS -->
    <link rel="stylesheet" href="~/lib/izi-toast-mater/css/iziToast.min.css">
    <script src="~/lib/izi-toast-mater/iziToast.min.js"></script>

    <script>
        let newsDataTable;
        let newsEditor;

        $(document).ready(function () {
            initializeComponents();
            initializeDataTable();
            loadNewsData();
        });

        function initializeComponents() {
            // Initialize Select2
            $('.select2').select2({
                placeholder: "Chọn một tùy chọn",
                allowClear: true
            });

            // Initialize DatePicker
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                language: 'vi',
                autoclose: true,
                todayHighlight: true
            });

            // Initialize CKEditor
            try {
                if (CKEDITOR.instances['newsContent']) {
                    CKEDITOR.instances['newsContent'].destroy();
                }
                newsEditor = CKEDITOR.replace('newsContent', {
                    height: 300,
                    language: 'vi',
                    filebrowserUploadUrl: '/upload-image',
                    // Suppress security warning
                    on: {
                        instanceReady: function () {
                            // Suppress console warnings
                            if (window.console && window.console.warn) {
                                const originalWarn = window.console.warn;
                                window.console.warn = function (message) {
                                    if (message && typeof message === 'string' && message.includes('CKEditor') && message.includes('not secure')) {
                                        return; // Suppress CKEditor security warnings
                                    }
                                    originalWarn.apply(window.console, arguments);
                                };
                            }
                        }
                    },
                    toolbar: [
                        { name: 'document', items: ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'] },
                        { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
                        { name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-', 'SpellChecker', 'Scayt'] },
                        '/',
                        { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                        { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl'] },
                        { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                        { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
                        '/',
                        { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                        { name: 'colors', items: ['TextColor', 'BGColor'] },
                        { name: 'tools', items: ['Maximize', 'ShowBlocks'] }
                    ]
                });
            } catch (error) {
                console.error('Error initializing CKEditor:', error);
                // Fallback to textarea if CKEditor fails
                $('#newsContent').show();
            }

            // Search button click
            $('#btnSearch').click(function () {
                newsDataTable.ajax.reload();
                showToast('success', 'Đang tìm kiếm...', 'Vui lòng chờ trong giây lát.');
            });

            // Reset button click
            $('#btnReset').click(function () {
                $('#searchKeyword').val('');
                $('#categoryFilter').val('').trigger('change');
                $('#dateFrom').val('');
                $('#dateTo').val('');
                newsDataTable.ajax.reload();
                showToast('info', 'Đã làm mới', 'Đã xóa tất cả bộ lọc.');
            });

            // Save news button click
            $('#btnSaveNews').click(function () {
                saveNews();
            });
        }

        function initializeDataTable() {
            newsDataTable = $('#newsDataTable').DataTable({
                processing: true,
                serverSide: false,
                ajax: {
                    url: '/New/GetListNewsByAjax',
                    type: 'GET',
                    data: function (d) {
                        return {
                            page: (d.start / d.length) + 1,
                            record: d.length,
                            keyword: $('#searchKeyword').val(),
                            newsCategoryId: $('#categoryFilter').val(),
                            dateFrom: $('#dateFrom').val(),
                            dateTo: $('#dateTo').val()
                        };
                    },
                    dataSrc: function (json) {
                        if (json.result === 1 && json.data) {
                            return json.data;
                        }
                        return [];
                    }
                },
                columns: [
                    { data: 'id', width: '5%' },
                    {
                        data: 'imageObj',
                        width: '10%',
                        render: function (data, type, row) {
                            if (data && data.relativeUrl) {
                                return `<img src="${data.relativeUrl}" class="img-thumbnail" style="width: 60px; height: 40px; object-fit: cover;">`;
                            }
                            return '<div class="bg-light text-center" style="width: 60px; height: 40px; line-height: 40px;"><i class="fas fa-image text-muted"></i></div>';
                        }
                    },
                    {
                        data: 'name',
                        width: '25%',
                        render: function (data, type, row) {
                            let hotBadge = row.isHot ? '<span class="badge bg-danger ms-2">Hot</span>' : '';
                            return `<div>
                                                                                                                    <strong>${data}</strong>${hotBadge}
                                                                                                                    <br><small class="text-muted">${row.description || 'Không có mô tả'}</small>
                                                                                                                </div>`;
                        }
                    },
                    {
                        data: 'newsCategoryObj',
                        width: '12%',
                        render: function (data, type, row) {
                            return data ? `<span class="badge bg-primary">${data.name}</span>` : '<span class="text-muted">-</span>';
                        }
                    },
                    {
                        data: 'publishedAt',
                        width: '12%',
                        render: function (data, type, row) {
                            return data ? formatDate(data) : '-';
                        }
                    },
                    {
                        data: 'viewNumber',
                        width: '8%',
                        render: function (data, type, row) {
                            return `<i class="fas fa-eye"></i> ${data || 0}`;
                        }
                    },
                    {
                        data: 'id',
                        width: '8%',
                        render: function (data, type, row) {
                            return `<span class="badge bg-success">Hoạt động</span>`;
                        }
                    },
                    {
                        data: 'id',
                        width: '20%',
                        render: function (data, type, row) {
                            return `<div class="btn-group" role="group">
                                                                                                                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="if(typeof viewNews === 'function') viewNews(${data})">
                                                                                                                        <i class="fas fa-eye"></i>
                                                                                                                    </button>
                                                                                                                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="if(typeof editNews === 'function') editNews(${data})">
                                                                                                                        <i class="fas fa-edit"></i>
                                                                                                                    </button>
                                                                                                                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="if(typeof deleteNews === 'function') deleteNews(${data})">
                                                                                                                        <i class="fas fa-trash"></i>
                                                                                                                    </button>
                                                                                                                </div>`;
                        }
                    }
                ],
                language: {
                    // Vietnamese language configuration
                    search: "Tìm kiếm:",
                    lengthMenu: "Hiển thị _MENU_ bản ghi",
                    info: "Hiển thị _START_ đến _END_ trong tổng số _TOTAL_ bản ghi",
                    infoEmpty: "Không có bản ghi nào",
                    infoFiltered: "(được lọc từ _MAX_ bản ghi)",
                    paginate: {
                        first: "Đầu",
                        previous: "Trước",
                        next: "Tiếp",
                        last: "Cuối"
                    }
                },
                responsive: true,
                pageLength: 10,
                lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "Tất cả"]],
                order: [[0, 'desc']]
            });
        }

        function loadNewsData() {
            // DataTable will handle loading via AJAX
        }

        function viewNews(id) {
            // Load news detail and show in modal
            $.ajax({
                url: `/New/GetById/${id}`,
                type: 'GET',
                success: function (response) {
                    if (response.result === 1 && response.data) {
                        const news = response.data;
                        let content = `
                                                                                                        <div class="row">
                                                                                                            <div class="col-md-4">
                                                                                                                ${news.imageObj?.relativeUrl
                                ? `<img src="${news.imageObj.relativeUrl}" class="img-fluid rounded" alt="${news.name}">`
                                : '<div class="bg-light text-center p-4"><i class="fas fa-image fa-3x text-muted"></i></div>'
                            }
                                                                                                            </div>
                                                                                                            <div class="col-md-8">
                                                                                                                <h4>${news.name}</h4>
                                                                                                                <p class="text-muted">${news.description || 'Không có mô tả'}</p>
                                                                                                                <div class="mb-3">
                                                                                                                    <strong>Danh mục:</strong> ${news.newsCategoryObj?.name || 'Không có'}
                                                                                                                    </div>
                                                                                                                <div class="mb-3">
                                                                                                                    <strong>Ngày đăng:</strong> ${formatDate(news.publishedAt)}
                                                                                                                    </div>
                                                                                                                <div class="mb-3">
                                                                                                                    <strong>Lượt xem:</strong> ${news.viewNumber || 0}
                                                                                                                </div>
                                                                                                                <div class="mb-3">
                                                                                                                    <strong>Trạng thái:</strong> ${news.isHot ? '<span class="badge bg-danger">Hot</span>' : '<span class="badge bg-secondary">Bình thường</span>'}
                                                                                                                </div>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                        <hr>
                                                                                                        <div class="mt-3">
                                                                                                            <h5>Nội dung chi tiết:</h5>
                                                                                                            <div class="border p-3 bg-light">
                                                                                                                ${news.detail || 'Không có nội dung chi tiết'}
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    `;
                        $('#viewNewsContent').html(content);
                        $('#viewNewsModal').modal('show');
                    } else {
                        showToast('error', 'Lỗi', 'Không thể tải thông tin tin tức.');
                    }
                },
                error: function () {
                    showToast('error', 'Lỗi', 'Không thể kết nối đến máy chủ.');
                }
            });
        }

        function editNews(id) {
            // Load news data and populate form
            $.ajax({
                url: `/New/GetById/${id}`,
                type: 'GET',
                success: function (response) {
                    if (response.result === 1 && response.data) {
                        const news = response.data;
                        $('#newsTitle').val(news.name);
                        $('#newsCategory').val(news.newsCategoryId).trigger('change');
                        $('#newsDescription').val(news.description);
                        $('#newsPublishedDate').val(formatDate(news.publishedAt));
                        $('#newsIsHot').prop('checked', news.isHot);
                        try {
                            if (newsEditor && newsEditor.setData) {
                                newsEditor.setData(news.detail || '');
                            }
                        } catch (error) {
                            console.error('Error setting CKEditor data:', error);
                            $('#newsContent').val(news.detail || '');
                        }
                        $('#addNewsModalLabel').text('Chỉnh sửa tin tức');
                        $('#addNewsModal').modal('show');
                    } else {
                        showToast('error', 'Lỗi', 'Không thể tải thông tin tin tức.');
                    }
                },
                error: function () {
                    showToast('error', 'Lỗi', 'Không thể kết nối đến máy chủ.');
                }
            });
        }

        function deleteNews(id) {
            iziToast.question({
                timeout: 20000,
                close: false,
                overlay: true,
                displayMode: 'once',
                id: 'question',
                zindex: 999,
                title: 'Xác nhận',
                message: 'Bạn có chắc chắn muốn xóa tin tức này?',
                position: 'center',
                buttons: [
                    ['<button><b>Đồng ý</b></button>', function (instance, toast) {
                        // Perform delete
                        $.ajax({
                            url: `/New/Delete/${id}`,
                            type: 'DELETE',
                            success: function (response) {
                                if (response.result === 1) {
                                    showToast('success', 'Thành công', 'Đã xóa tin tức thành công.');
                                    newsDataTable.ajax.reload();
                                } else {
                                    showToast('error', 'Lỗi', response.error || 'Không thể xóa tin tức.');
                                }
                            },
                            error: function () {
                                showToast('error', 'Lỗi', 'Không thể kết nối đến máy chủ.');
                            }
                        });
                        instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');
                    }, true],
                    ['<button>Hủy</button>', function (instance, toast) {
                        instance.hide({ transitionOut: 'fadeOut' }, toast, 'button');
                    }]
                ]
            });
        }

        function saveNews() {
            let detail = '';
            try {
                detail = newsEditor && newsEditor.getData ? newsEditor.getData() : $('#newsContent').val();
            } catch (error) {
                console.error('Error getting CKEditor data:', error);
                detail = $('#newsContent').val();
            }

            const formData = {
                name: $('#newsTitle').val(),
                newsCategoryId: $('#newsCategory').val(),
                description: $('#newsDescription').val(),
                detail: detail,
                publishedAt: $('#newsPublishedDate').val(),
                isHot: $('#newsIsHot').is(':checked')
            };

            // Validate form
            if (!formData.name) {
                showToast('error', 'Lỗi', 'Vui lòng nhập tiêu đề tin tức.');
                return;
            }

            if (!formData.newsCategoryId) {
                showToast('error', 'Lỗi', 'Vui lòng chọn danh mục.');
                return;
            }

            // Save news
            $.ajax({
                url: '/New/Save',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.result === 1) {
                        showToast('success', 'Thành công', 'Đã lưu tin tức thành công.');
                        $('#addNewsModal').modal('hide');
                        newsDataTable.ajax.reload();
                        resetForm();
                    } else {
                        showToast('error', 'Lỗi', response.error || 'Không thể lưu tin tức.');
                    }
                },
                error: function () {
                    showToast('error', 'Lỗi', 'Không thể kết nối đến máy chủ.');
                }
            });
        }

        function resetForm() {
            $('#newsForm')[0].reset();
            $('#newsCategory').val('').trigger('change');
            try {
                if (newsEditor && newsEditor.setData) {
                    newsEditor.setData('');
                }
            } catch (error) {
                console.error('Error resetting CKEditor:', error);
                $('#newsContent').val('');
            }
            $('#addNewsModalLabel').text('Thêm tin tức mới');
        }

        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('vi-VN');
        }

        function showToast(type, title, message) {
            iziToast[type]({
                title: title,
                message: message,
                position: 'topRight',
                timeout: 5000
            });
        }

        // Modal events
        $('#addNewsModal').on('hidden.bs.modal', function () {
            resetForm();
        });

        // Prevent CKEditor conflicts when modal is shown
        $('#addNewsModal').on('shown.bs.modal', function () {
            // Re-initialize CKEditor if needed
            try {
                if (!CKEDITOR.instances['newsContent']) {
                    newsEditor = CKEDITOR.replace('newsContent', {
                        height: 300,
                        language: 'vi',
                        filebrowserUploadUrl: '/upload-image',
                        // Suppress security warning
                        on: {
                            instanceReady: function () {
                                // Suppress console warnings
                                if (window.console && window.console.warn) {
                                    const originalWarn = window.console.warn;
                                    window.console.warn = function (message) {
                                        if (message && typeof message === 'string' && message.includes('CKEditor') && message.includes('not secure')) {
                                            return; // Suppress CKEditor security warnings
                                        }
                                        originalWarn.apply(window.console, arguments);
                                    };
                                }
                            }
                        },
                        toolbar: [
                            { name: 'document', items: ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates'] },
                            { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
                            { name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-', 'SpellChecker', 'Scayt'] },
                            '/',
                            { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                            { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl'] },
                            { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
                            { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
                            '/',
                            { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                            { name: 'colors', items: ['TextColor', 'BGColor'] },
                            { name: 'tools', items: ['Maximize', 'ShowBlocks'] }
                        ]
                    });
                }
            } catch (error) {
                console.error('Error initializing CKEditor in modal:', error);
                // Fallback to textarea if CKEditor fails
                $('#newsContent').show();
            }
        });
    </script>
}